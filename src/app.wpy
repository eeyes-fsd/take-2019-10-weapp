<style lang="less">
page {
  height: 100%;
  background-color: rgb(242, 242, 242);
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from '@wepy/core';
import eventHub from './common/eventHub';
import vuex from '@wepy/x';

wepy.use(vuex);

wepy.app({
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    // 'before-setData': function (dirty) {
    //   console.log('setData dirty: ', dirty);
    //   return dirty;
    // }
  },
  globalData: {
    userInfo: null
  },

  async onLaunch() {
    await wx.login({
      success: res => {
        console.log('wx code', res.code); //发送code到服务端
      }
    });
    wx.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
          wx.getUserInfo({
            success: response => {
              // 可以将 res 发送给后台解码出 unionId
              this.$options.globalData.userInfo = response.userInfo;
              console.log("写入个人信息")
            }
          })
        }
      }
    });
    // this.testAsync();
    // eventHub.$on('app-launch', (...args) => {
    //   console.log('app-launch event emitted, the params are:');
    //   console.log(args);
    // });
  },
  methods: {
    sleep(s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved');
        }, s * 1000);
      });
    },

    async testAsync() {
      let d = await this.sleep(3);
      console.log(d);
    }
  }
});
</script>
<config>
{
    pages: [
      'pages/index',
      'pages/address',
      'pages/order',
      'pages/caddress',
      'pages/pay',
      'pages/advise',
      'pages/aboutus',
      'pages/paysuccess',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
}
</config>
